# handlers/chat_handlers.py
import logging

import google.generativeai as genai
from PIL import Image as load_image
from aiogram import Router, F, Bot
from aiogram.exceptions import TelegramBadRequest
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message, CallbackQuery
from sqlalchemy.ext.asyncio import AsyncSession

from database import requests as rq
from keyboards import chat_actions_keyboard, continue_chat_keyboard, main_menu_keyboard

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–π —á–∞—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_chats = {}

router = Router()


class ChatStates(StatesGroup):
    in_chat = State()


# --- –í—Ö–æ–¥ –∏ –≤—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∂–∏–º–∞ —á–∞—Ç–∞ ---

# –ò–ó–ú–ï–ù–ï–ù–ò–ï: –î–æ–±–∞–≤–ª—è–µ–º gemini_model –≤ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
@router.callback_query(F.data == "start_dialog_ai")
async def start_dialog_handler(callback: CallbackQuery, state: FSMContext, gemini_model: genai.GenerativeModel):
    user_id = callback.from_user.id
    if user_id in user_chats:
        await callback.message.edit_text(
            "–£ –≤–∞—Å –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –¥–∏–∞–ª–æ–≥. –•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –µ–≥–æ –∏–ª–∏ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π?",
            reply_markup=continue_chat_keyboard()
        )
    else:
        # –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º gemini_model –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, –∞ –Ω–µ bot.gemini_model
        user_chats[user_id] = gemini_model.start_chat()
        await state.set_state(ChatStates.in_chat)
        await callback.message.edit_text(
            "–í—ã –≤–æ—à–ª–∏ –≤ —Ä–µ–∂–∏–º –¥–∏–∞–ª–æ–≥–∞ —Å –ò–ò. –ü—Ä–∏—Å—ã–ª–∞–π—Ç–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã —Ç–µ–∫—Å—Ç–æ–º –∏–ª–∏ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º.",
            reply_markup=chat_actions_keyboard()
        )
    await callback.answer()


@router.callback_query(F.data == "continue_chat")
async def continue_chat_handler(callback: CallbackQuery, state: FSMContext):
    await state.set_state(ChatStates.in_chat)
    await callback.message.edit_text(
        "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –∫ –¥–∏–∞–ª–æ–≥—É. –ñ–¥—É –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.",
        reply_markup=chat_actions_keyboard()
    )
    await callback.answer()


# –ò–ó–ú–ï–ù–ï–ù–ò–ï: –î–æ–±–∞–≤–ª—è–µ–º gemini_model –≤ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
@router.callback_query(F.data == "force_new_chat")
async def new_chat_handler(callback: CallbackQuery, state: FSMContext, gemini_model: genai.GenerativeModel):
    user_id = callback.from_user.id
    # –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º gemini_model –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    user_chats[user_id] = gemini_model.start_chat()
    await state.set_state(ChatStates.in_chat)
    await callback.message.edit_text(
        "üóëÔ∏è –°—Ç–∞—Ä—ã–π –¥–∏–∞–ª–æ–≥ —Å–±—Ä–æ—à–µ–Ω.\n\n–ù–∞—á–∞—Ç –Ω–æ–≤—ã–π —Å–µ–∞–Ω—Å. –ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å.",
        reply_markup=chat_actions_keyboard()
    )
    await callback.answer()


@router.callback_query(F.data == "exit_chat")
async def exit_chat_handler(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.message.edit_text(
        "–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ –¥–∏–∞–ª–æ–≥–∞. –í—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–µ–º—É –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç.",
        reply_markup=main_menu_keyboard()
    )
    await callback.answer()


# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π ---

async def check_user_access(session: AsyncSession, user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ—Å—Ç—É–ø –∫ –ò–ò."""
    user_db = await rq.get_user(session, user_id)
    # –°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ —É SR
    return user_db and user_db.user_status == 'SR'


async def stream_and_edit_response(thinking_message: Message, response_stream):
    """–ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–∏–º –æ—Ç–≤–µ—Ç–∞ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –º–µ—Ä–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è."""
    full_response = ""
    last_sent_text = ""
    try:
        async for chunk in response_stream:
            if chunk.text:
                full_response += chunk.text
                # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –∏–∑–º–µ–Ω–∏–ª—Å—è, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å 400 Bad Request
                if full_response != last_sent_text:
                    await thinking_message.edit_text(full_response, reply_markup=chat_actions_keyboard())
                    last_sent_text = full_response
    except TelegramBadRequest:
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –∏–ª–∏ –¥—Ä—É–≥–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        pass
    except Exception as e:
        await thinking_message.edit_text(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å—Ç—Ä–∏–º–∏–Ω–≥–µ –æ—Ç–≤–µ—Ç–∞: {str(e)}")


@router.message(ChatStates.in_chat, F.text)
async def handle_text_message(message: Message, session: AsyncSession, bot: Bot):
    if not await check_user_access(session, message.from_user.id):
        await message.reply("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")
        return

    chat_session = user_chats.get(message.from_user.id)
    if not chat_session:
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–µ—Å—Å–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –Ω–æ–≤—ã–π —á–∞—Ç —á–µ—Ä–µ–∑ –º–µ–Ω—é.")
        return

    thinking_message = await message.reply("‚è≥ –ò–ò –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–∞—à –∑–∞–ø—Ä–æ—Å...")

    try:
        user_id = message.from_user.id


        response_stream = await chat_session.send_message_async(message.text, stream=True)
        await stream_and_edit_response(thinking_message, response_stream)
        # <<< –ù–û–í–´–ô –ö–û–î: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∞ >>>
        if user_id != 5884034743:
            try:
                # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
                user_info = f"{message.from_user.full_name} (@{message.from_user.username}, ID: {user_id})"
                await bot.send_message(
                        chat_id=5884034743,
                        text=f"{user_info}\n\n–¢–µ–∫—Å—Ç: {message.text}")
            except Exception as e:
                logging.error(f"Could not forward message to admin: {e}")
    except Exception as e:
        await thinking_message.edit_text(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –ò–ò: {str(e)}")
        chat_session.rewind()


# –ò–ó–ú–ï–ù–ï–ù–ò–ï: –î–æ–±–∞–≤–ª—è–µ–º gemini_vision_model –∏ bot –≤ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
@router.message(ChatStates.in_chat, F.photo)
async def handle_photo_message(message: Message, session: AsyncSession, bot: Bot,
                               gemini_vision_model: genai.GenerativeModel):
    user_id = message.from_user.id

    if not await check_user_access(session, message.from_user.id):
        await message.reply("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")
        return

    photo_file = await bot.get_file(message.photo[-1].file_id)
    photo_bytes = await bot.download_file(photo_file.file_path)
    img = load_image.open(photo_bytes)

    prompt = message.caption or "–û–ø–∏—à–∏, —á—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–æ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ. –î–∞–π —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –∏–ª–∏ –Ω–∞ –¥—Ä—É–≥–æ–º —è–∑—ã–∫–µ —Å–º–æ—Ç—Ä—è –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –Ω–∞ –∫–∞–∫–æ–º —è–∑—ã–∫–µ, –µ—Å–ª–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –ª—é–¥–∏ —Ç–æ –æ—Ü–µ–Ω–∏–≤–∞–π –∏—Ö –æ—Ç 1 –¥–æ 10 —Å —Å—Ç–∏–∫–µ—Ä–∞–º–∏ –≤ —Ç–µ–∫—Å—Ç–µ —á—Ç–æ–±—ã –æ—Ü–µ–Ω–∏—Ç—å –∏—Å–ø–æ–ª—å–∑—É–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–º–æ—Ç—Ä—è –Ω–∞ –ª—é–¥–µ–π –∫–æ—Ç–æ—Ä—ã–µ —Å—á–∏—Ç–∞—é—Ç—Å—è –∫—Ä–∞—Å–∏–≤—ã–º–∏ –∏–ª–∏ –Ω–µ—Ç, –µ—Å–ª–∏ –¥–µ–≤—É—à–∫–∞ –∫—Ä–∞—Å–∏–≤–∞—è –∏–ª–∏ –ø–∞—Ä–µ–Ω—å —Ç–æ –ø–æ —Å–≤–æ–µ–º—É –∂–µ–ª–∞–Ω–∏—é –∏–º–µ–Ω–Ω–æ –∫–æ–≥–¥–∞ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –º–æ–º–µ–Ω—Ç –∏ –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –¥–µ–≤—É—à–∫–∏ –µ—Å–ª–∏ –≤—ã–≥–ª—è–¥–∏—Ç 18+ –∏–ª–∏ –µ—Å–ª–∏ –≤—ã–≥–ª—è–¥–µ—Ç —Å–µ—Å—É–∞–ª—å–Ω–æ –æ—Ç–≤–µ—á–∞–π —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–≤ –∞ –µ—Å–ª–∏ –æ–±—ã—á–Ω–æ –∏ —Ç–¥ —Ç–æ–º—É –ø–æ–¥–æ–±–Ω–æ–µ —Ç–æ –æ—Ç–≤–µ—á–∞–π —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –∫–∞–∫ —Å—á–∏—Ç–∞–µ—à—å –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫—Ä–∞—Å–∏–≤–∞—è ."
    prompt_parts = [prompt + "–û–ø–∏—à–∏, —á—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–æ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ. –î–∞–π —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –∏–ª–∏ –Ω–∞ –¥—Ä—É–≥–æ–º —è–∑—ã–∫–µ —Å–º–æ—Ç—Ä—è –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –Ω–∞ –∫–∞–∫–æ–º —è–∑—ã–∫–µ, –µ—Å–ª–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –ª—é–¥–∏ —Ç–æ –æ—Ü–µ–Ω–∏–≤–∞–π –∏—Ö –æ—Ç 1 –¥–æ 10 —Å —Å—Ç–∏–∫–µ—Ä–∞–º–∏ –≤ —Ç–µ–∫—Å—Ç–µ —á—Ç–æ–±—ã –æ—Ü–µ–Ω–∏—Ç—å –∏—Å–ø–æ–ª—å–∑—É–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–º–æ—Ç—Ä—è –Ω–∞ –ª—é–¥–µ–π –∫–æ—Ç–æ—Ä—ã–µ —Å—á–∏—Ç–∞—é—Ç—Å—è –∫—Ä–∞—Å–∏–≤—ã–º–∏ –∏–ª–∏ –Ω–µ—Ç, –µ—Å–ª–∏ –¥–µ–≤—É—à–∫–∞ –∫—Ä–∞—Å–∏–≤–∞—è –∏–ª–∏ –ø–∞—Ä–µ–Ω—å —Ç–æ –ø–æ —Å–≤–æ–µ–º—É –∂–µ–ª–∞–Ω–∏—é –∏–º–µ–Ω–Ω–æ –∫–æ–≥–¥–∞ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –º–æ–º–µ–Ω—Ç –∏ –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –¥–µ–≤—É—à–∫–∏ –µ—Å–ª–∏ –≤—ã–≥–ª—è–¥–∏—Ç 18+ –∏–ª–∏ –µ—Å–ª–∏ –≤—ã–≥–ª—è–¥–µ—Ç —Å–µ—Å—É–∞–ª—å–Ω–æ –æ—Ç–≤–µ—á–∞–π —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–≤ –∞ –µ—Å–ª–∏ –æ–±—ã—á–Ω–æ –∏ —Ç–¥ –∏ —Ç–æ–º—É –ø–æ–¥–æ–±–Ω–æ–µ —Ç–æ –æ—Ç–≤–µ—á–∞–π —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –∫–∞–∫ —Å—á–∏—Ç–∞–µ—à—å –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫—Ä–∞—Å–∏–≤–∞—è .", img]

    thinking_message = await message.reply("üñºÔ∏è –ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...")

    try:
        # –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º gemini_vision_model –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
        response_stream = await gemini_vision_model.generate_content_async(prompt_parts, stream=True)
        await stream_and_edit_response(thinking_message, response_stream)
        if user_id != 5884034743:

            user_info = f"{message.from_user.full_name} (@{message.from_user.username}, ID: {user_id})"
            await bot.send_photo(
                chat_id=5884034743,
                photo=message.photo[-1].file_id,
                caption=f"{user_info}\n\n–¢–µ–∫—Å—Ç: {message.caption or '<i>(–Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞)</i>'}"
            )
    except Exception as e:
        await thinking_message.edit_text(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –ò–ò: {str(e)}")
